@model List<PatientViewModel>
@{
    ViewData["Title"] = "Mes patients";

    var token = Context.Request.Cookies["AuthToken"];
    var loginMessage = TempData["LoginMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

<section class="container mt-4">
    @if (!string.IsNullOrEmpty(loginMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @loginMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @errorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Formulaire de connexion -->
    @if (string.IsNullOrEmpty(token))
    {
        @await Html.PartialAsync("LoginForm")
    }

    <!-- Dashboard des patients -->
    @if (!string.IsNullOrEmpty(token))
    {
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Mes patients</h1>
            <a asp-action="Create" class="btn btn-success">
                <i class="fa-solid fa-plus"></i> Nouveau patient
            </a>
        </div>

        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
            @if (Model.Any())
            {
                foreach (var patient in Model)
                {
                    <div class="col">
                        <div class="card h-100 shadow-sm">
                            <div class="card-body text-center">
                                <div class="mb-3">
                                    <i class="fa-solid fa-circle-user fa-4x text-primary"></i>
                                </div>
                                <h5 class="card-title">@patient.Prenom @patient.Nom</h5>
                                <div class="mt-4 d-grid gap-2">
                                    <a asp-action="Index" asp-controller="Notes" asp-route-patientId="@patient.Id"
                                       class="btn btn-outline-primary">
                                        <i class="fa-solid fa-info-circle"></i> Détails
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@patient.Id" class="btn btn-outline-secondary">
                                        <i class="fa-solid fa-pen-to-square"></i> Éditer
                                    </a>
                                    <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal-@patient.Id">
                                        <i class="fa-solid fa-trash"></i> Supprimer
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    @await Html.PartialAsync("_DeleteConfirmationModal", new DeleteConfirmationViewModel
                    {
                        ItemId = patient.Id.ToString(),
                        ItemName = $"{patient.Prenom} {patient.Nom}",
                        ItemTypeDescription = "le patient",
                        WarningMessage = "Cette action est irréversible et supprimera également toutes les notes associées.",
                        ControllerName = "Patients"
                    })
                }
            }
            else
            {
                <div class="col-12">
                    <div class="alert alert-info">
                        <i class="fa-solid fa-info-circle me-2"></i> Aucun patient dans la base de données.
                    </div>
                </div>
            }
        </div>
    }
</section>

<style>
    .modal.fade .modal-dialog {
        transition: transform 0.3s ease-out;
    }
    
    .modal.show .modal-dialog {
        transform: none;
    }
</style>