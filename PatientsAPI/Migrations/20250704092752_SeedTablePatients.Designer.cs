// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P10___MédiLabo___Patients_API.Data;

#nullable disable

namespace P10___MédiLabo___Patients_API.Migrations
{
    [DbContext(typeof(PatientsDbContext))]
    [Migration("20250704092752_SeedTablePatients")]
    partial class SeedTablePatients
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P10___MédiLabo___Patients_API.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "1 Brookside St",
                            DateNaissance = new DateTime(1966, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = 2,
                            Nom = "TestNone",
                            Prenom = "Test",
                            Telephone = "100-222-3333"
                        },
                        new
                        {
                            Id = 2,
                            Adresse = "2 High St",
                            DateNaissance = new DateTime(1945, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = 1,
                            Nom = "TestBorderline",
                            Prenom = "Test",
                            Telephone = "200-333-4444"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "3 Club Road",
                            DateNaissance = new DateTime(2004, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = 1,
                            Nom = "TestInDanger",
                            Prenom = "Test",
                            Telephone = "300-444-5555"
                        },
                        new
                        {
                            Id = 4,
                            Adresse = "4 Valley Dr",
                            DateNaissance = new DateTime(2002, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = 2,
                            Nom = "TestEarlyOnset",
                            Prenom = "Test",
                            Telephone = "400-555-6666"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
